	.version 1.1
	.target compute_10, map_f64_to_f32
	// compiled with /home/mmurphy/sw/compiler/gpgpu/open64/src/targia3264_nvisa/lib//be
	// nvopencc built on 2008-02-15

	.reg .u32 %ra<17>;
	.reg .u64 %rda<17>;
	.reg .f32 %fa<17>;
	.reg .f64 %fda<17>;
	.reg .u32 %rv<5>;
	.reg .u64 %rdv<5>;
	.reg .f32 %fv<5>;
	.reg .f64 %fdv<5>;


	//-----------------------------------------------------------
	// Compiling loop1.i (/tmp/ccBI#.HcKFP7)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:compute_10, Endian:little, Pointer Size:64
	//  -O3	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"loop1.i"

	.shared .align 4 .b8 data1[4096];
	.shared .align 4 .b8 data2[4096];
	.shared .align 4 .b8 data3[4096];

	.entry doit
	{
	.reg .u32 %r<18>;
	.reg .u64 %rd<13>;
	.reg .f32 %f<5>;
	.reg .pred %p<6>;
	.param .s32 __cudaparm_doit_start;
	.param .s32 __cudaparm_doit_end;
	.loc	1	23	0
$LBB1_doit:
	.loc	1	25	0
	ld.param.s32 	%r1, [__cudaparm_doit_start];	// id:35 __cudaparm_doit_start+0x0
	mov.s32 	%r2, %r1;            	// 
	ld.param.s32 	%r3, [__cudaparm_doit_end];	// id:34 __cudaparm_doit_end+0x0
	setp.le.s32 	%p1, %r3, %r1;   	// 
	@%p1 bra 	$Lt_0_15;           	// 
	sub.s32 	%r4, %r3, %r1;       	// 
	mov.u64 	%rd1, data3;         	// 
	mov.u64 	%rd2, data1;         	// 
	mov.u64 	%rd3, data2;         	// 
	mov.s32 	%r5, %r4;            	// 
$Lt_0_17:
 //<loop> Loop body line 25, nesting depth: 1, estimated iterations: unknown
	.loc	1	26	0
	cvt.u64.s32 	%rd4, %r2;       	// 
	mul.lo.u64 	%rd5, %rd4, 32;   	// 
	mov.s32 	%r6, 0;              	// 
$Lt_0_20:
 //<loop> Loop body line 26, nesting depth: 2, estimated iterations: 32
	.loc	1	15	0
	cvt.u64.s32 	%rd6, %r6;       	// 
	add.u64 	%rd7, %rd6, %rd5;    	// 
	mul.lo.u64 	%rd8, %rd7, 4;    	// 
	add.u64 	%rd9, %rd8, %rd1;    	// 
	ld.shared.f32 	%f1, [%rd9+0]; 	// id:37 data3+0x0
	add.u64 	%rd10, %rd8, %rd3;   	// 
	ld.shared.f32 	%f2, [%rd10+0];	// id:36 data2+0x0
	add.f32 	%f3, %f1, %f2;       	// 
	add.u64 	%rd11, %rd8, %rd2;   	// 
	st.shared.f32 	[%rd11+0], %f3;	// id:38 data1+0x0
	mov.s32 	%r7, 32;             	// 
	set.gt.u32.s32 	%r8, %r6, %r7;	// 
	neg.s32 	%r9, %r8;            	// 
	add.s32 	%r10, %r2, %r6;      	// 
	mov.s32 	%r11, 32;            	// 
	set.gt.u32.s32 	%r12, %r10, %r11;	// 
	neg.s32 	%r13, %r12;          	// 
	or.b32 	%r14, %r9, %r13;      	// 
	mov.s32 	%r15, 0;             	// 
	setp.eq.s32 	%p2, %r14, %r15; 	// 
	@%p2 bra 	$Lt_0_21;           	// 
 //<loop> Part of loop body line 25, head labeled $Lt_0_17
	bra.uni 	$Lt_0_1;             	// 
$Lt_0_21:
 //<loop> Part of loop body line 26, head labeled $Lt_0_20
	add.s32 	%r6, %r6, 1;         	// 
	mov.s32 	%r16, 32;            	// 
	setp.ne.s32 	%p3, %r6, %r16;  	// 
	@%p3 bra 	$Lt_0_20;           	// 
$Lt_0_1:
 //<loop> Part of loop body line 25, head labeled $Lt_0_17
	.loc	1	26	0
	add.s32 	%r2, %r2, 1;         	// 
	setp.ne.s32 	%p4, %r2, %r3;   	// 
	@%p4 bra 	$Lt_0_17;           	// 
$Lt_0_15:
	.loc	1	28	0
	exit;                         	// 
$LDWend_doit:
	} // doit

