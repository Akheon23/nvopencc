	.version 1.1
	.target compute_10, map_f64_to_f32
	// compiled with /home/mmurphy/sw/compiler/gpgpu/open64/src/targia3264_nvisa/lib//be
	// nvopencc built on 2008-02-15

	.reg .u32 %ra<17>;
	.reg .u64 %rda<17>;
	.reg .f32 %fa<17>;
	.reg .f64 %fda<17>;
	.reg .u32 %rv<5>;
	.reg .u64 %rdv<5>;
	.reg .f32 %fv<5>;
	.reg .f64 %fdv<5>;


	//-----------------------------------------------------------
	// Compiling loop7.i (/tmp/ccBI#.jMOQ8w)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:compute_10, Endian:little, Pointer Size:64
	//  -O3	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"loop7.i"

	.shared .align 4 .b8 data1[4096];
	.shared .align 4 .b8 data2[4096];
	.shared .align 4 .b8 data3[4096];

	.entry doit
	{
	.reg .u32 %r<24>;
	.reg .u64 %rd<16>;
	.reg .f32 %f<26>;
	.reg .pred %p<5>;
	.loc	1	10	0
$LBB1_doit:
	.loc	1	12	0
	mov.s32 	%r1, %r2;            	// 
	mov.s32 	%r3, %r1;            	// 
	mov.s32 	%r4, %r5;            	// 
	setp.ge.s32 	%p1, %r1, %r4;   	// 
	@%p1 bra 	$Lt_0_9;            	// 
	sub.s32 	%r6, %r4, %r1;       	// 
	mov.s32 	%r7, %r6;            	// 
	mov.s32 	%r8, %r9;            	// 
	add.s32 	%r10, %r1, %r8;      	// 
	add.s32 	%r11, %r8, %r4;      	// 
	add.s32 	%r12, %r6, 7;        	// 
	shr.s32 	%r13, %r12, 31;      	// 
	mov.s32 	%r14, 7;             	// 
	and.b32 	%r15, %r13, %r14;    	// 
	add.s32 	%r16, %r15, %r12;    	// 
	shr.s32 	%r17, %r16, 3;       	// 
	sub.s32 	%r18, %r1, %r8;      	// 
	cvt.s64.s32 	%rd1, %r18;      	// 
	cvt.s64.s32 	%rd2, %r10;      	// 
	mul.lo.u64 	%rd3, %rd2, 32;   	// 
	add.u64 	%rd4, %rd1, %rd3;    	// 
	mul.lo.u64 	%rd5, %rd4, 4;    	// 
	mov.u64 	%rd6, data2;         	// 
	add.u64 	%rd7, %rd5, %rd6;    	// 
	mov.u64 	%rd8, data3;         	// 
	add.u64 	%rd9, %rd5, %rd8;    	// 
	mov.u64 	%rd10, data1;        	// 
	mov.s32 	%r19, %r7;           	// 
$Lt_0_11:
 //<loop> Loop body line 12, nesting depth: 1, estimated iterations: unknown
	mov.s32 	%r20, %r17;          	// 
	mov.s32 	%r21, %r10;          	// 
	mov.s64 	%rd11, %rd5;         	// 
	mov.s64 	%rd12, %rd7;         	// 
	mov.s64 	%rd13, %rd9;         	// 
	add.u64 	%rd14, %rd11, %rd10; 	// 
 //<loop> Part of loop body line 12, head labeled $Lt_0_11
	mov.s32 	%r22, %r20;          	// 
$Lt_0_14:
 //<loop> Loop body line 12, nesting depth: 2, estimated iterations: unknown
	.loc	1	14	0
	ld.shared.f32 	%f1, [%rd12+0];	// id:138 data2+0x0
	ld.shared.f32 	%f2, [%rd13+0];	// id:139 data3+0x0
	mul.f32 	%f3, %f1, %f2;       	// 
	st.shared.f32 	[%rd14+0], %f3;	// id:140 data1+0x0
	.loc	1	15	0
	ld.shared.f32 	%f4, [%rd12+128];	// id:141 data2+0x0
	ld.shared.f32 	%f5, [%rd13+128];	// id:142 data3+0x0
	mul.f32 	%f6, %f4, %f5;       	// 
	st.shared.f32 	[%rd14+128], %f6;	// id:143 data1+0x0
	.loc	1	16	0
	ld.shared.f32 	%f7, [%rd12+256];	// id:144 data2+0x0
	ld.shared.f32 	%f8, [%rd13+256];	// id:145 data3+0x0
	mul.f32 	%f9, %f7, %f8;       	// 
	st.shared.f32 	[%rd14+256], %f9;	// id:146 data1+0x0
	.loc	1	17	0
	ld.shared.f32 	%f10, [%rd12+384];	// id:147 data2+0x0
	ld.shared.f32 	%f11, [%rd13+384];	// id:148 data3+0x0
	mul.f32 	%f12, %f10, %f11;    	// 
	st.shared.f32 	[%rd14+384], %f12;	// id:149 data1+0x0
	.loc	1	18	0
	ld.shared.f32 	%f13, [%rd12+512];	// id:150 data2+0x0
	ld.shared.f32 	%f14, [%rd13+512];	// id:151 data3+0x0
	mul.f32 	%f15, %f13, %f14;    	// 
	st.shared.f32 	[%rd14+512], %f15;	// id:152 data1+0x0
	.loc	1	19	0
	ld.shared.f32 	%f16, [%rd12+640];	// id:153 data2+0x0
	ld.shared.f32 	%f17, [%rd13+640];	// id:154 data3+0x0
	mul.f32 	%f18, %f16, %f17;    	// 
	st.shared.f32 	[%rd14+640], %f18;	// id:155 data1+0x0
	.loc	1	20	0
	ld.shared.f32 	%f19, [%rd12+768];	// id:156 data2+0x0
	ld.shared.f32 	%f20, [%rd13+768];	// id:157 data3+0x0
	mul.f32 	%f21, %f19, %f20;    	// 
	st.shared.f32 	[%rd14+768], %f21;	// id:158 data1+0x0
	.loc	1	21	0
	ld.shared.f32 	%f22, [%rd12+896];	// id:159 data2+0x0
	ld.shared.f32 	%f23, [%rd13+896];	// id:160 data3+0x0
	mul.f32 	%f24, %f22, %f23;    	// 
	st.shared.f32 	[%rd14+896], %f24;	// id:161 data1+0x0
	add.s32 	%r21, %r21, 8;       	// 
	add.u64 	%rd14, %rd14, 1024;  	// 
	add.u64 	%rd13, %rd13, 1024;  	// 
	add.u64 	%rd12, %rd12, 1024;  	// 
	setp.lt.s32 	%p2, %r21, %r11; 	// 
	@%p2 bra 	$Lt_0_14;           	// 
 //<loop> Part of loop body line 12, head labeled $Lt_0_11
	add.s32 	%r3, %r3, 1;         	// 
	add.u64 	%rd5, %rd11, 4;      	// 
	add.u64 	%rd9, %rd9, 4;       	// 
	add.u64 	%rd7, %rd7, 4;       	// 
	setp.ne.s32 	%p3, %r3, %r4;   	// 
	@%p3 bra 	$Lt_0_11;           	// 
$Lt_0_9:
	.loc	1	24	0
	exit;                         	// 
$LDWend_doit:
	} // doit

