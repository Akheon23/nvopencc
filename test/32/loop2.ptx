	.version 1.1
	.target compute_10, map_f64_to_f32
	// compiled with /home/mmurphy/sw/compiler/gpgpu/open64/src/targia32_nvisa/lib//be
	// nvopencc built on 2008-02-15

	.reg .u32 %ra<17>;
	.reg .u64 %rda<17>;
	.reg .f32 %fa<17>;
	.reg .f64 %fda<17>;
	.reg .u32 %rv<5>;
	.reg .u64 %rdv<5>;
	.reg .f32 %fv<5>;
	.reg .f64 %fdv<5>;


	//-----------------------------------------------------------
	// Compiling loop2.i (/tmp/ccBI#.kYU825)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:compute_10, Endian:little, Pointer Size:32
	//  -O3	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"loop2.i"

	.shared .align 4 .b8 data1[4096];
	.shared .align 4 .b8 data2[4096];
	.shared .align 4 .b8 data3[4096];

	.entry doit
	{
	.reg .u32 %r<24>;
	.reg .f32 %f<21>;
	.reg .f64 %fd<7>;
	.reg .pred %p<5>;
	.loc	1	9	0
$LBB1_doit:
	.loc	1	11	0
	mov.s32 	%r1, %r2;            	// 
	mov.s32 	%r3, %r1;            	// 
	mov.s32 	%r4, %r5;            	// 
	setp.ge.s32 	%p1, %r1, %r4;   	// 
	@%p1 bra 	$Lt_0_9;            	// 
	mov.u32 	%r6, data1;          	// 
	sub.s32 	%r7, %r4, %r1;       	// 
	mov.s32 	%r8, %r7;            	// 
	mul.lo.u32 	%r9, %r1, 32;     	// 
	add.u32 	%r10, %r1, %r9;      	// 
	add.u32 	%r11, %r4, %r9;      	// 
	mul.lo.u32 	%r12, %r10, 4;    	// 
	mul.lo.u32 	%r13, %r11, 4;    	// 
	add.u32 	%r14, %r12, %r6;     	// 
	add.u32 	%r15, %r13, %r6;     	// 
	mov.u32 	%r16, data2;         	// 
	add.u32 	%r17, %r12, %r16;    	// 
	mov.s32 	%r18, %r8;           	// 
$Lt_0_11:
 //<loop> Loop body line 11, nesting depth: 1, estimated iterations: unknown
	mov.s32 	%r19, %r7;           	// 
	mov.s32 	%r20, %r14;          	// 
	mov.s32 	%r21, %r17;          	// 
 //<loop> Part of loop body line 11, head labeled $Lt_0_11
	mov.s32 	%r22, %r19;          	// 
$Lt_0_14:
 //<loop> Loop body line 11, nesting depth: 2, estimated iterations: unknown
	.loc	1	13	0
	ld.shared.f32 	%f1, [%r20+0]; 	// id:50 data1+0x0
	cvt.f64.f32 	%fd1, %f1;       	// 
	ld.shared.f32 	%f2, [%r21+132];	// id:51 data2+0x0
	ld.shared.f32 	%f3, [%r21+128];	// id:52 data2+0x0
	ld.shared.f32 	%f4, [%r21+124];	// id:53 data2+0x0
	ld.shared.f32 	%f5, [%r21+4]; 	// id:54 data2+0x0
	ld.shared.f32 	%f6, [%r21+0]; 	// id:55 data2+0x0
	ld.shared.f32 	%f7, [%r21+-4];	// id:56 data2+0x0
	ld.shared.f32 	%f8, [%r21+-124];	// id:57 data2+0x0
	ld.shared.f32 	%f9, [%r21+-132];	// id:58 data2+0x0
	ld.shared.f32 	%f10, [%r21+-128];	// id:59 data2+0x0
	add.f32 	%f11, %f9, %f10;     	// 
	add.f32 	%f12, %f8, %f11;     	// 
	add.f32 	%f13, %f7, %f12;     	// 
	add.f32 	%f14, %f6, %f13;     	// 
	add.f32 	%f15, %f5, %f14;     	// 
	add.f32 	%f16, %f4, %f15;     	// 
	add.f32 	%f17, %f3, %f16;     	// 
	add.f32 	%f18, %f2, %f17;     	// 
	cvt.f64.f32 	%fd2, %f18;      	// 
	mov.f64 	%fd3, 0d4022000000000000;	// 9
	div.f64 	%fd4, %fd2, %fd3;    	// 
	add.f64 	%fd5, %fd1, %fd4;    	// 
	cvt.rn.f32.f64 	%f19, %fd5;   	// 
	st.shared.f32 	[%r20+0], %f19;	// id:60 data1+0x0
	add.u32 	%r21, %r21, 4;       	// 
	add.u32 	%r20, %r20, 4;       	// 
	setp.ne.s32 	%p2, %r20, %r15; 	// 
	@%p2 bra 	$Lt_0_14;           	// 
 //<loop> Part of loop body line 11, head labeled $Lt_0_11
	add.s32 	%r3, %r3, 1;         	// 
	add.u32 	%r15, %r15, 128;     	// 
	add.u32 	%r17, %r17, 128;     	// 
	add.u32 	%r14, %r14, 128;     	// 
	setp.ne.s32 	%p3, %r3, %r4;   	// 
	@%p3 bra 	$Lt_0_11;           	// 
$Lt_0_9:
	.loc	1	18	0
	exit;                         	// 
$LDWend_doit:
	} // doit

