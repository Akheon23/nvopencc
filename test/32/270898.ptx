	.version 1.1
	.target compute_10, map_f64_to_f32
	// compiled with /home/mmurphy/sw/compiler/gpgpu/open64/src/targia32_nvisa/lib//be
	// nvopencc built on 2008-02-15

	.reg .u32 %ra<17>;
	.reg .u64 %rda<17>;
	.reg .f32 %fa<17>;
	.reg .f64 %fda<17>;
	.reg .u32 %rv<5>;
	.reg .u64 %rdv<5>;
	.reg .f32 %fv<5>;
	.reg .f64 %fdv<5>;


	//-----------------------------------------------------------
	// Compiling 270898.i (/tmp/ccBI#.o0zXuX)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:compute_10, Endian:little, Pointer Size:32
	//  -O3	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"270898.i"

	.shared .f32 sf;
	.global .align 4 .b8 gf3[12];
	.global .align 16 .b8 gf[16];
	.global .align 16 .b8 s[1600];
	.global .align 16 .b8 x[1600];

	.entry test1
	{
	.reg .f32 %f<7>;
	.loc	1	18	0
$LBB1_test1:
	ld.global.v4.f32 	{%f1,%f2,%f3,_}, [gf+0];	// 
	.loc	1	21	0
	add.f32 	%f4, %f1, %f2;       	// 
	add.f32 	%f5, %f3, %f4;       	// 
	st.shared.f32 	[sf], %f5;     	// id:12 sf+0x0
	.loc	1	22	0
	exit;                         	// 
$LDWend_test1:
	} // test1

	.entry test2
	{
	.reg .f32 %f<7>;
	.loc	1	25	0
$LBB1_test2:
	ld.global.v4.f32 	{%f1,%f2,%f3,_}, [gf+0];	// 
	.loc	1	28	0
	add.f32 	%f4, %f1, %f2;       	// 
	add.f32 	%f5, %f3, %f4;       	// 
	st.shared.f32 	[sf], %f5;     	// id:12 sf+0x0
	.loc	1	29	0
	exit;                         	// 
$LDWend_test2:
	} // test2

	.entry test3
	{
	.reg .u32 %r<9>;
	.reg .f32 %f<10>;
	.param .s32 __cudaparm_test3_i;
	.param .s32 __cudaparm_test3_expr;
	.loc	1	34	0
$LBB1_test3:
	.loc	1	35	0
	ld.param.s32 	%r1, [__cudaparm_test3_i];	// id:50 __cudaparm_test3_i+0x0
	mul.lo.u32 	%r2, %r1, 16;     	// 
	mov.u32 	%r3, x;              	// 
	add.u32 	%r4, %r2, %r3;       	// 
	mov.u32 	%r5, s;              	// 
	add.u32 	%r6, %r2, %r5;       	// 
	ld.global.v4.f32 	{%f1,%f2,%f3,%f4}, [%r4+0];	// 
	st.global.v4.f32 	[%r6+0], {%f1,%f2,%f3,%f4};	// 
	.loc	1	36	0
	ld.param.s32 	%r7, [__cudaparm_test3_expr];	// id:59 __cudaparm_test3_expr+0x0
	cvt.rn.f32.s32 	%f5, %r7;     	// 
	add.f32 	%f6, %f5, %f1;       	// 
	.loc	1	37	0
	add.f32 	%f7, %f5, %f2;       	// 
	st.global.v2.f32 	[%r6+0], {%f6,%f7};	// 
	.loc	1	38	0
	add.f32 	%f8, %f5, %f3;       	// 
	st.global.f32 	[%r6+8], %f8;  	// id:62 s+0x0
	st.global.v4.f32 	[%r4+16], {%f6,%f7,%f8,%f4};	// 
	.loc	1	40	0
	exit;                         	// 
$LDWend_test3:
	} // test3

	.entry test4
	{
	.reg .u32 %r<7>;
	.reg .f32 %f<10>;
	.param .s32 __cudaparm_test4_i;
	.param .s32 __cudaparm_test4_expr;
	.loc	1	45	0
$LBB1_test4:
	.loc	1	47	0
	ld.param.s32 	%r1, [__cudaparm_test4_i];	// id:36 __cudaparm_test4_i+0x0
	mul.lo.u32 	%r2, %r1, 16;     	// 
	mov.u32 	%r3, x;              	// 
	add.u32 	%r4, %r2, %r3;       	// 
	ld.global.v4.f32 	{%f1,%f2,%f3,%f4}, [%r4+0];	// 
	.loc	1	49	0
	ld.param.s32 	%r5, [__cudaparm_test4_expr];	// id:38 __cudaparm_test4_expr+0x0
	cvt.rn.f32.s32 	%f5, %r5;     	// 
	add.f32 	%f6, %f2, %f5;       	// 
	.loc	1	50	0
	add.f32 	%f7, %f3, %f5;       	// 
	.loc	1	51	0
	add.f32 	%f8, %f1, %f5;       	// 
	st.global.v4.f32 	[%r4+16], {%f8,%f6,%f7,%f4};	// 
	.loc	1	52	0
	exit;                         	// 
$LDWend_test4:
	} // test4

