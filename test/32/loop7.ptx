	.version 1.1
	.target compute_10, map_f64_to_f32
	// compiled with /home/mmurphy/sw/compiler/gpgpu/open64/src/targia32_nvisa/lib//be
	// nvopencc built on 2008-02-15

	.reg .u32 %ra<17>;
	.reg .u64 %rda<17>;
	.reg .f32 %fa<17>;
	.reg .f64 %fda<17>;
	.reg .u32 %rv<5>;
	.reg .u64 %rdv<5>;
	.reg .f32 %fv<5>;
	.reg .f64 %fdv<5>;


	//-----------------------------------------------------------
	// Compiling loop7.i (/tmp/ccBI#.ZgnJio)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:compute_10, Endian:little, Pointer Size:32
	//  -O3	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"loop7.i"

	.shared .align 4 .b8 data1[4096];
	.shared .align 4 .b8 data2[4096];
	.shared .align 4 .b8 data3[4096];

	.entry doit
	{
	.reg .u32 %r<39>;
	.reg .f32 %f<26>;
	.reg .pred %p<5>;
	.loc	1	10	0
$LBB1_doit:
	.loc	1	12	0
	mov.s32 	%r1, %r2;            	// 
	mov.s32 	%r3, %r1;            	// 
	mov.s32 	%r4, %r5;            	// 
	setp.ge.s32 	%p1, %r1, %r4;   	// 
	@%p1 bra 	$Lt_0_9;            	// 
	mov.u32 	%r6, data2;          	// 
	sub.s32 	%r7, %r4, %r1;       	// 
	mov.s32 	%r8, %r7;            	// 
	mov.s32 	%r9, %r10;           	// 
	sub.s32 	%r11, %r1, %r9;      	// 
	add.s32 	%r12, %r1, %r9;      	// 
	add.s32 	%r13, %r9, %r4;      	// 
	add.s32 	%r14, %r7, 7;        	// 
	mul.lo.u32 	%r15, %r12, 32;   	// 
	mul.lo.u32 	%r16, %r13, 32;   	// 
	shr.s32 	%r17, %r14, 31;      	// 
	mov.s32 	%r18, 7;             	// 
	and.b32 	%r19, %r17, %r18;    	// 
	add.s32 	%r20, %r19, %r14;    	// 
	shr.s32 	%r21, %r20, 3;       	// 
	add.u32 	%r22, %r11, %r15;    	// 
	add.u32 	%r23, %r11, %r16;    	// 
	mul.lo.u32 	%r24, %r22, 4;    	// 
	mul.lo.u32 	%r25, %r23, 4;    	// 
	add.u32 	%r26, %r24, %r6;     	// 
	add.u32 	%r27, %r25, %r6;     	// 
	mov.u32 	%r28, data3;         	// 
	add.u32 	%r29, %r24, %r28;    	// 
	mov.u32 	%r30, data1;         	// 
	mov.s32 	%r31, %r8;           	// 
$Lt_0_11:
 //<loop> Loop body line 12, nesting depth: 1, estimated iterations: unknown
	mov.s32 	%r32, %r21;          	// 
	mov.s32 	%r33, %r24;          	// 
	mov.s32 	%r34, %r26;          	// 
	mov.s32 	%r35, %r29;          	// 
	add.u32 	%r36, %r33, %r30;    	// 
 //<loop> Part of loop body line 12, head labeled $Lt_0_11
	mov.s32 	%r37, %r32;          	// 
$Lt_0_14:
 //<loop> Loop body line 12, nesting depth: 2, estimated iterations: unknown
	.loc	1	14	0
	ld.shared.f32 	%f1, [%r34+0]; 	// id:138 data2+0x0
	ld.shared.f32 	%f2, [%r35+0]; 	// id:139 data3+0x0
	mul.f32 	%f3, %f1, %f2;       	// 
	st.shared.f32 	[%r36+0], %f3; 	// id:140 data1+0x0
	.loc	1	15	0
	ld.shared.f32 	%f4, [%r34+128];	// id:141 data2+0x0
	ld.shared.f32 	%f5, [%r35+128];	// id:142 data3+0x0
	mul.f32 	%f6, %f4, %f5;       	// 
	st.shared.f32 	[%r36+128], %f6;	// id:143 data1+0x0
	.loc	1	16	0
	ld.shared.f32 	%f7, [%r34+256];	// id:144 data2+0x0
	ld.shared.f32 	%f8, [%r35+256];	// id:145 data3+0x0
	mul.f32 	%f9, %f7, %f8;       	// 
	st.shared.f32 	[%r36+256], %f9;	// id:146 data1+0x0
	.loc	1	17	0
	ld.shared.f32 	%f10, [%r34+384];	// id:147 data2+0x0
	ld.shared.f32 	%f11, [%r35+384];	// id:148 data3+0x0
	mul.f32 	%f12, %f10, %f11;    	// 
	st.shared.f32 	[%r36+384], %f12;	// id:149 data1+0x0
	.loc	1	18	0
	ld.shared.f32 	%f13, [%r34+512];	// id:150 data2+0x0
	ld.shared.f32 	%f14, [%r35+512];	// id:151 data3+0x0
	mul.f32 	%f15, %f13, %f14;    	// 
	st.shared.f32 	[%r36+512], %f15;	// id:152 data1+0x0
	.loc	1	19	0
	ld.shared.f32 	%f16, [%r34+640];	// id:153 data2+0x0
	ld.shared.f32 	%f17, [%r35+640];	// id:154 data3+0x0
	mul.f32 	%f18, %f16, %f17;    	// 
	st.shared.f32 	[%r36+640], %f18;	// id:155 data1+0x0
	.loc	1	20	0
	ld.shared.f32 	%f19, [%r34+768];	// id:156 data2+0x0
	ld.shared.f32 	%f20, [%r35+768];	// id:157 data3+0x0
	mul.f32 	%f21, %f19, %f20;    	// 
	st.shared.f32 	[%r36+768], %f21;	// id:158 data1+0x0
	.loc	1	21	0
	ld.shared.f32 	%f22, [%r34+896];	// id:159 data2+0x0
	ld.shared.f32 	%f23, [%r35+896];	// id:160 data3+0x0
	mul.f32 	%f24, %f22, %f23;    	// 
	st.shared.f32 	[%r36+896], %f24;	// id:161 data1+0x0
	add.u32 	%r36, %r36, 1024;    	// 
	add.u32 	%r35, %r35, 1024;    	// 
	add.u32 	%r34, %r34, 1024;    	// 
	setp.lt.s32 	%p2, %r34, %r27; 	// 
	@%p2 bra 	$Lt_0_14;           	// 
 //<loop> Part of loop body line 12, head labeled $Lt_0_11
	add.s32 	%r3, %r3, 1;         	// 
	add.u32 	%r27, %r27, 4;       	// 
	add.u32 	%r24, %r33, 4;       	// 
	add.u32 	%r29, %r29, 4;       	// 
	add.u32 	%r26, %r26, 4;       	// 
	setp.ne.s32 	%p3, %r3, %r4;   	// 
	@%p3 bra 	$Lt_0_11;           	// 
$Lt_0_9:
	.loc	1	24	0
	exit;                         	// 
$LDWend_doit:
	} // doit

